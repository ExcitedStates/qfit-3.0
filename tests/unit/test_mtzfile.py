import unittest
import os.path as op

import numpy as np
import pytest

from qfit.xtal.mtzfile import MTZFile

from .base_test_case import UnitBase


class TestMtzfile(UnitBase):
    def test_mtzfile_fmodel(self):
        """
        Tiny FCALC map coefficients generated by mmtbx.fmodel
        """
        MTZ = self.make_tiny_fmodel_mtz()
        mtz = MTZFile(MTZ)
        assert mtz.ncrystals == 2
        col_labels = ["H", "K", "L", "FWT", "PHIFWT", "R-free-flags"]
        for dataset in mtz.datasets:
            for label, col in zip(col_labels, dataset.columns):
                assert col.label == label
                assert len(getattr(dataset, label)) == 354
                assert len(mtz[label]) == 354
        assert mtz["H"].dtype == np.int32
        assert (np.min(mtz["H"]), np.max(mtz["H"])) == (0, 5)
        assert (np.min(mtz["K"]), np.max(mtz["K"])) == (0, 8)
        assert (np.min(mtz["L"]), np.max(mtz["L"])) == (0, 10)
        assert (
            "{:.2f}, {:.2f}".format(np.min(mtz["FWT"]), np.max(mtz["FWT"]))
            == "0.05, 127.86"
        )
        assert (np.min(mtz["PHIFWT"]), np.max(mtz["PHIFWT"])) == (-180, 180)
        # XXX the original implementation stores these differently
        # assert mtz.resmax == pytest.approx(1.3922, abs=0.001)
        # assert mtz.resmin == pytest.approx(9.3704, abs=0.001)
        assert mtz.ispg == 19
        assert mtz.spg == "P212121"
